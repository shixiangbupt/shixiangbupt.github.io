<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/blog/2021/11/17/hello-world/"/>
      <url>/blog/2021/11/17/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 搭建博客</title>
      <link href="/blog/2021/11/16/hexo%20blog/"/>
      <url>/blog/2021/11/16/hexo%20blog/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介"></a>Hexo简介</h1><p><a href="https://hexo.io/zh-cn/">Hexo</a>是一款基于Node.js的静态博客框架,依赖少易于安装使用,可以方便的生成静态网页托管在GitHub和Coding上,是搭建博客的首选框架.</p><p>本教程分为三部分:</p><ul><li>Hexo的初级;</li><li>Hexo的基本配置,更换主题;</li><li>杂项</li></ul><hr><h1 id="第一部分"><a href="#第一部分" class="headerlink" title="第一部分"></a>第一部分</h1><h2 id="Hexo的初级搭建及部署"><a href="#Hexo的初级搭建及部署" class="headerlink" title="Hexo的初级搭建及部署"></a>Hexo的初级搭建及部署</h2><ol><li>安装Git</li><li>安装Node.js</li><li>安装Hexo</li><li>将Hexo部署到GitHub</li><li>设置个人域名(如果你有的话)</li><li>发布文章<h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3>Git是目前世界上最先进的分布式版本控制系统,可以有效、高速的处理从很小到非常大的项目版本管理.也就是用来管理你的hexo博客文章,上传到GitHub的工具.<br>到<a href="https://gitforwindows.org/">Git官网</a>下载,下载安装后右键,会有一个Git Bash的命令行工具,以后就用这个工具来使用Git.</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install git</span><br></pre></td></tr></table></figure><p>检验Bash是否安装成功以及查看版本.</p><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>Hexo是基于nodeJS编写的,所以需要安装一下Node.js和里面的npm工具.<br><a href="https://nodejs.org/en/download/">Node.js官网下载</a>选择LTS版本即可.<br>安装完成之后,执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">$ npm -v</span><br></pre></td></tr></table></figure><p>检验是否安装成功以及查看版本.</p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>前面Git和Node.js安装完成后,就可以安装Hexo了,你可以先创建一个文件夹blog(这里你可以取自己喜欢的名字,如果你不新建文件夹,不要在磁盘目录下执行),然后[^cd]: 进入该目录的文件夹.</p><p>输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo -v</span><br></pre></td></tr></table></figure><p>依旧查看一下是否安装成功以及版本.<br>接下来初始化一下Hexo,接下来可能会卡死,出现无法输入命令的情况,我们直接来结束它.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init myblog</span><br></pre></td></tr></table></figure><p>这里myblog取决于你自己喜欢的名字.然后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> myblog //进入myblog这个文件夹</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>完成新建后,指定文件夹目录下有:</p><ul><li>node_modules: 依赖包</li><li>public：存放生成的页面</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放你的文章</li><li>themes：主题</li><li>_config.yml: 博客的配置文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>这里是打开Hexo的服务,在浏览器输入localhost:4000就可以看到你生成的博客了.<br>之后使用<kbd>Ctrl</kbd>+<kbd>C</kbd>把服务关掉.</p><h3 id="GitHub创建个人仓库"><a href="#GitHub创建个人仓库" class="headerlink" title="GitHub创建个人仓库"></a>GitHub创建个人仓库</h3><p>登录到你的GitHub之后,找到右上角的小加号<br><img src="/blog/2021/11/16/hexo%20blog/rpt.jpeg" alt="rpt"><br>选择New repository<br><img src="/blog/2021/11/16/hexo%20blog/rpt2.jpeg" alt="rpt2"><br>这里项目的名称填入你的GitHub用户名.github.io,之后点击Create repository.</p><h3 id="生成SSH添加到GitHub"><a href="#生成SSH添加到GitHub" class="headerlink" title="生成SSH添加到GitHub"></a>生成SSH添加到GitHub</h3><p>回到你的Git Bash中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">&quot;yourname&quot;</span></span><br><span class="line">$ git config --global user.email <span class="string">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure><p>这里的yourname输入你的GitHub用户名,youremail输入你GitHub的邮箱.<br>可以用以下两条,检查一下你有没有输对</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config user.name</span><br><span class="line">$ git config user.email</span><br></pre></td></tr></table></figure><p>然后创建SSH,一路回车</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure><p>这个时候它会告诉你已经生成了.ssh的文件夹,并且告诉你他的目录在哪里,我们找到.ssh这个文件夹后会有三个文件</p><p>ssh,简单来讲,就是一个秘钥,其中,id_rsa是你这台电脑的私人秘钥,不能给别人看的,id_rsa.pub是公共秘钥,可以随便给别人看.把这个公钥放在GitHub上,这样当你链接GitHub自己的账户时,它就会根据公钥匹配你的私钥,当能够相互匹配时,才能够顺利的通过git上传你的文件到GitHub上.</p><p>而后在GitHub的setting中,找到SSH keys的设置选项,点击New SSH key<br>把你的id_rsa.pub里面的信息复制进去.</p><p>接下来在GitBash中运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>检验是否成功.</p><h3 id="将Hexo部署到GitHub"><a href="#将Hexo部署到GitHub" class="headerlink" title="将Hexo部署到GitHub"></a>将Hexo部署到GitHub</h3><p>这一步，我们就可以将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上，打开站点配置文件 _config.yml，翻到最后，修改为<br>YourgithubName就是你的GitHub账户,其实也就是repo: 你的仓库地址.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://github.com/YourgithubName/YourgithubName.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean //清除了你之前生成的东西，也可以不加</span><br><span class="line">$ hexo generate //顾名思义，生成静态文章，可以用 hexo g缩写</span><br><span class="line">$ hexo deploy //部署文章，可以用hexo d缩写</span><br></pre></td></tr></table></figure><p>注意deploy时可能要你输入username和password,如果你是第一次部署的话.<br>如果得到deploy done说明已经成功了,过一会就可以在你的仓库看到你的博客了.<br>如果报错,可能是代理的原因导致上传失败,关闭代理重复上一步即可.</p><h3 id="设置个人域名"><a href="#设置个人域名" class="headerlink" title="设置个人域名"></a>设置个人域名</h3><p>现在你的个人网站的地址是 yourname.github.io,但是如果你更喜欢一个好听的名字,那么就可以买一个域名.<br>购买完之后要实名认证,审核三到五天后才可以正常解析.</p><table><thead><tr><th>记录类型</th><th>主机记录</th><th>记录值</th></tr></thead><tbody><tr><td>CNAME</td><td>www</td><td>yourname.github.io</td></tr><tr><td>A</td><td>@</td><td>192.30.252.153</td></tr><tr><td>A</td><td>@</td><td>192.30.252.153</td></tr></tbody></table><p>登录GitHub，进入之前创建的仓库，点击settings，设置Custom domain，输入你的域名,然后在你的博客文件source中创建一个名为CNAME文件，不要后缀。写上你的域名。<br>最后,在GitBash中输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>过不了多久，再打开你的浏览器，输入你自己的域名，就可以看到搭建的网站啦.</p><h3 id="写自己的文章"><a href="#写自己的文章" class="headerlink" title="写自己的文章"></a>写自己的文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new newpapername</span><br></pre></td></tr></table></figure><p>这里newpapername就是你要写的文章的文件名<br>然后在source/_post中打开markdown文件，就可以开始编辑了。当你写完的时候，再</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>关于怎样写,和如何去写,可以对照HelloWorld的格式及样板进行操作,以及<a href="https://www.runoob.com/markdown/md-tutorial.html">Markdown</a>以后再出一期详细的教程.</p><h1 id="第二部分"><a href="#第二部分" class="headerlink" title="第二部分"></a>第二部分</h1><h2 id="Hexo的基本配置"><a href="#Hexo的基本配置" class="headerlink" title="Hexo的基本配置"></a>Hexo的基本配置</h2><p>在文件根目录下的_config.yml，就是整个hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考<a href="https://hexo.io/zh-cn/docs/configuration">官方的配置</a>描述。<br>这里主要讲一下主题.</p><h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><p>如果你觉得默认的landscape主题不好看，那么可以在<a href="https://hexo.io/themes/">官网</a>的主题中，选择你喜欢的一个主题进行修改就可以啦.</p><p>直接在github链接上下载下来，然后放到theme文件夹下就行了，然后再在刚才说的配置文件中把theme换成那个主题文件夹的名字，它就会自动在theme文件夹中搜索你配置的主题。</p><p>而后进入hueman这个文件夹，可以看到里面也有一个配置文件_config.xml，貌似它默认是_config.xml.example，把它复制一份，重命名为_config.xml就可以了。这个配置文件是修改你整个主题的配置文件。<br>而配置的教程呢,可以参考每个主题的GitHub,一般都会有很详细的教程.</p><h1 id="END"><a href="#END" class="headerlink" title="END"></a>END</h1>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
